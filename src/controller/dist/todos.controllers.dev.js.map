{"version":3,"sources":["todos.controllers.js"],"names":["Todos","require","Categories","Users","createTodos","req","res","newTodos","body","create","status","send","json","obtenerTodosUsers","id","params","findByPk","attributes","exclude","include","model","todos","deleteTodos","destroy","where","module","exports"],"mappings":";;AAAA;AACA,IAAMA,KAAK,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,2BAAD,CAA1B;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,sBAAD,CAArB,C,CAGA;;;AACA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAENC,UAAAA,QAFM,GAEKF,GAAG,CAACG,IAFT;AAAA;AAAA,0CAGNR,KAAK,CAACS,MAAN,CAAaF,QAAb,CAHM;;AAAA;AAIZD,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AAJY;AAAA;;AAAA;AAAA;AAAA;AAOZL,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBE,IAAhB;;AAPY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB,C,CAWA;;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAOR,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEXQ,UAAAA,EAFW,GAELT,GAAG,CAACU,MAFC,CAEXD,EAFW;AAAA;AAAA,0CAGEd,KAAK,CAACgB,QAAN,CAAeF,EAAf,EAAmB;AACnCG,YAAAA,UAAU,EAAE;AACRC,cAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,YAAX;AADD,aADuB;AAKnCC,YAAAA,OAAO,EAAE,CACL;AACIC,cAAAA,KAAK,EAAEjB,KADX;AAEIc,cAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,UAAP;AAFhB,aADK,EAKL;AACIG,cAAAA,KAAK,EAAElB,UADX;AAEIe,cAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,MAAP;AAFhB,aALK;AAL0B,WAAnB,CAHF;;AAAA;AAGZI,UAAAA,KAHY;AAmBlBf,UAAAA,GAAG,CAACM,IAAJ,CAASS,KAAT;AAnBkB;AAAA;;AAAA;AAAA;AAAA;AAsBlBf,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBE,IAAhB;;AAtBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B,C,CA0BA;;;AACA,IAAMU,WAAW,GAAG,SAAdA,WAAc,CAAOjB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELQ,UAAAA,EAFK,GAECT,GAAG,CAACU,MAFL,CAELD,EAFK;AAAA;AAAA,0CAGNd,KAAK,CAACuB,OAAN,CAAc;AAChBC,YAAAA,KAAK,EAAE;AAACV,cAAAA,EAAE,EAAFA;AAAD;AADS,WAAd,CAHM;;AAAA;AAMZR,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AANY;AAAA;;AAAA;AAAA;AAAA;AASZL,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBE,IAAhB;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAaAa,MAAM,CAACC,OAAP,GAAiB;AACbtB,EAAAA,WAAW,EAAXA,WADa;AAEbS,EAAAA,iBAAiB,EAAjBA,iBAFa;AAGbS,EAAAA,WAAW,EAAXA;AAHa,CAAjB","sourcesContent":["//Importamos el middlewares\r\nconst Todos = require('../model/todos.model');\r\nconst Categories = require('../model/categories.model');\r\nconst Users = require('../model/users.model');\r\n\r\n\r\n//Crea todas las tareas\r\nconst createTodos = async (req, res) => {\r\n    try {\r\n        const newTodos = req.body;\r\n        await Todos.create(newTodos);\r\n        res.status(201).send();\r\n\r\n    } catch (error) {\r\n        res.status(400).json(error);\r\n    }\r\n}\r\n\r\n//obtiene todas las tareas de un usuario incluidas sus categorias\r\nconst obtenerTodosUsers = async (req, res) => {\r\n    try {\r\n        const {id} = req.params;\r\n        const todos = await Todos.findByPk(id, {\r\n            attributes: {\r\n                exclude: ['userId', 'categoryId']\r\n            },\r\n            \r\n            include: [\r\n                {\r\n                    model: Users,\r\n                    attributes: ['id', 'username']\r\n                },\r\n                {\r\n                    model: Categories,\r\n                    attributes: ['id', 'name'],\r\n                },\r\n            ]\r\n        });\r\n        res.json(todos);\r\n\r\n    } catch (error) {\r\n        res.status(400).json(error);\r\n    }\r\n}\r\n\r\n//Eliminar todos\r\nconst deleteTodos = async (req, res) => {\r\n    try {\r\n        const {id} = req.params;\r\n        await Todos.destroy({\r\n            where: {id}\r\n        });\r\n        res.status(204).send();\r\n\r\n    } catch (error) {\r\n        res.status(400).json(error);\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    createTodos,\r\n    obtenerTodosUsers,\r\n    deleteTodos\r\n};"],"file":"todos.controllers.dev.js"}