{"version":3,"sources":["todos.controllers.js"],"names":["Todos","require","Categories","Users","req","res","newTodos","regeneratorRuntime","async","_context","prev","next","body","awrap","createTodos","create","status","send","t0","json","stop","obtenerTodosUsers","id","todos","_context2","params","findByPk","attributes","exclude","include","model","sent","deleteTodos","_context3","destroy","module","exports"],"mappings":"aACA,IAAMA,MAAQC,QAAQ,wBADtBC,WAAAD,QAAA,6BACMD,MAAQC,QAAQ,wBAEhBE,YAAgB,SAAAC,EAAAC,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAMRJ,EAAWF,EAAIQ,KANPH,EAAAE,KAAA,EAAAJ,mBAAAM,MAIhBC,MAAcC,OAAdD,IAJgB,KAAA,EAIFT,EAAAW,OAAA,KAAAC,OAJER,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,MAAA,GAIFJ,EAAAW,OAAA,KAAAG,KAAAV,EAAAS,IAJE,KAAA,GAAA,IAAA,MAAA,OAAAT,EAAAW,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAIFC,kBAAA,SAAAjB,EAAAC,GAAA,IAAAiB,EAAAC,EAAA,OAAAhB,mBAAAC,MAAA,SAAAgB,GAAA,OAAA,OAAAA,EAAAd,KAAAc,EAAAb,MAAA,KAAA,EAAA,OAAAa,EAAAd,KAAA,EAAAY,EAAAlB,EAAAqB,OAAAH,GAAAE,EAAAb,KAAA,EAAAJ,mBAAAM,MAIII,MAAhBS,SAAAJ,EAAA,CAJYK,WAAA,CAAAC,QAAA,CAAA,SAAA,eAAAC,QAAA,CAAA,CAOZC,MAAgBX,MAgBJQ,WAAY,CAAC,KAAM,aAvBnB,CAAAG,MAAA5B,WAAAyB,WAAA,CAAA,KAAA,aAAA,KAAA,EAIRX,EAJQQ,EAAAO,KA+BZ1B,EAAIc,KAAKI,GA/BGC,EAAAb,KAAA,GAAA,MAAA,KAAA,EAAAa,EAAAd,KAAA,EAAAc,EAAAN,GAAAM,EAAA,MAAA,GAYMnB,EAAAW,OAAA,KAAAG,KAAAK,EAAAN,IAZN,KAAA,GAAA,IAAA,MAAA,OAAAM,EAAAJ,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAYMY,YAAA,SAAA5B,EAAAC,GAAA,IAAAiB,EAAA,OAAAf,mBAAAC,MAAA,SAAAyB,GAAA,OAAA,OAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,KAAA,EAAA,OAAAsB,EAAAvB,KAAA,EAAAY,EAAAlB,EAAAqB,OAAAH,GAAAW,EAAAtB,KAAA,EAAAJ,mBAAAM,MAAAb,MAAAkC,QAAA,CAIdP,MAAAA,CAAAA,GAAAA,MAJc,KAAA,EAIFtB,EAAAW,OADuB,KAAAC,OAHrBgB,EAAAtB,KAAA,GAAA,MAAA,KAAA,EAAAsB,EAAAvB,KAAA,EAAAuB,EAAAf,GAAAe,EAAA,MAAA,GAWNN,EAAAA,OAAAA,KAAUR,KAAVQ,EAAAA,IAXM,KAAA,GAAA,IAAA,MAAA,OAAAM,EAAAb,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAaVe,OAAAC,QALK,CAL0BtB,YAAAA,YAuC3CO,kBAAAA,kBA1CsBW,YAAAA","file":"todos.controllers.min.js","sourcesContent":["//Importamos el middlewares\r\nconst Todos = require('../model/todos.model');\r\nconst Categories = require('../model/categories.model');\r\nconst Users = require('../model/users.model');\r\n\r\n\r\n//Crea todas las tareas\r\nconst createTodos = async (req, res) => {\r\n    try {\r\n        const newTodos = req.body;\r\n        await Todos.create(newTodos);\r\n        res.status(201).send();\r\n\r\n    } catch (error) {\r\n        res.status(400).json(error);\r\n    }\r\n}\r\n\r\n//obtiene todas las tareas de un usuario incluidas sus categorias\r\nconst obtenerTodosUsers = async (req, res) => {\r\n    try {\r\n        const {id} = req.params;\r\n        const todos = await Todos.findByPk(id, {\r\n            attributes: {\r\n                exclude: ['userId', 'categoryId']\r\n            },\r\n            \r\n            include: [\r\n                {\r\n                    model: Users,\r\n                    attributes: ['id', 'username']\r\n                },\r\n                {\r\n                    model: Categories,\r\n                    attributes: ['id', 'name'],\r\n                },\r\n            ]\r\n        });\r\n        res.json(todos);\r\n\r\n    } catch (error) {\r\n        res.status(400).json(error);\r\n    }\r\n}\r\n\r\n//Eliminar todos\r\nconst deleteTodos = async (req, res) => {\r\n    try {\r\n        const {id} = req.params;\r\n        await Todos.destroy({\r\n            where: {id}\r\n        });\r\n        res.status(204).send();\r\n\r\n    } catch (error) {\r\n        res.status(400).json(error);\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    createTodos,\r\n    obtenerTodosUsers,\r\n    deleteTodos\r\n};"]}