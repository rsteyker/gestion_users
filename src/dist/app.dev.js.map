{"version":3,"sources":["app.js"],"names":["express","require","db","config","initModel","cors","userRoutes","todosRoutes","rolesRoutes","categoriesRoutes","app","use","json","PORT","process","env","sync","then","console","log","error","get","req","res","send","listen"],"mappings":";;AAAA;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,kBAAD,CAAlB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBE,MAAlB;;AACA,IAAMC,SAAS,GAAGH,OAAO,CAAC,mBAAD,CAAzB;;AACA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMK,UAAU,GAAGL,OAAO,CAAC,uBAAD,CAA1B;;AACA,IAAMM,WAAW,GAAGN,OAAO,CAAC,uBAAD,CAA3B;;AACA,IAAMO,WAAW,GAAGP,OAAO,CAAC,uBAAD,CAA3B;;AACA,IAAMQ,gBAAgB,GAAGR,OAAO,CAAC,4BAAD,CAAhC,C,CAGA;;;AACAG,SAAS,G,CAET;;AACA,IAAMM,GAAG,GAAGV,OAAO,EAAnB;AACAU,GAAG,CAACC,GAAJ,CAAQN,IAAI,EAAZ;AACAK,GAAG,CAACC,GAAJ,CAAQX,OAAO,CAACY,IAAR,EAAR;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC,C,CAEA;;AACAX,EAAE,CAACc,IAAH,GACCC,IADD,CACM,YAAM;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,CAHD,WAIO,UAAAC,KAAK;AAAA,SAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,CAJZ;AAMAV,GAAG,CAACW,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,yBAAT;AACH,CAFD;AAKAd,GAAG,CAACC,GAAJ,CAAQL,UAAR;AACAI,GAAG,CAACC,GAAJ,CAAQJ,WAAR;AACAG,GAAG,CAACC,GAAJ,CAAQH,WAAR;AACAE,GAAG,CAACC,GAAJ,CAAQF,gBAAR;AAGAC,GAAG,CAACe,MAAJ,CAAWZ,IAAX,EAAiB,YAAM;AACnBK,EAAAA,OAAO,CAACC,GAAR,4CAAgDN,IAAhD;AACH,CAFD","sourcesContent":["//Importar express\r\nconst express = require('express');\r\nconst db = require('./utils/database');\r\nrequire('dotenv').config();\r\nconst initModel = require('./model/initModel');\r\nconst cors = require('cors');\r\n\r\nconst userRoutes = require('./routes/users.routes');\r\nconst todosRoutes = require('./routes/todos.routes');\r\nconst rolesRoutes = require('./routes/roles.routes');\r\nconst categoriesRoutes = require('./routes/categories.routes');\r\n\r\n\r\n//Ejecutamos la función InitModel\r\ninitModel();\r\n\r\n//Creamos la instancia\r\nconst app = express();\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\nconst PORT = process.env.PORT || 8000;\r\n\r\n//Ejecutamos el método authenticate\r\ndb.sync()\r\n.then(() => {\r\n    console.log('Base de datos sincronizada')\r\n})\r\n.catch(error => console.log(error));\r\n\r\napp.get('/', (req, res) => {\r\n    res.send('Servidor funcionando OK')\r\n});\r\n\r\n\r\napp.use(userRoutes);\r\napp.use(todosRoutes);\r\napp.use(rolesRoutes);\r\napp.use(categoriesRoutes);\r\n\r\n\r\napp.listen(PORT, () => {\r\n    console.log(`servidor escuchando en el puerto ${PORT}`)\r\n});\r\n\r\n"],"file":"app.dev.js"}